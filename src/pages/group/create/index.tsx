import { usePost } from "@/apis/hooks";
import { DefaultLayout } from "@/components";
import { ApiRoutes } from "@/constants";
import { CustomBtn, GroupForm, GroupOptionForm } from "@/containers";
import { useBgColor } from "@/hooks";
import { toUrl } from "@/utils";
import { Box, Container, Flex, Heading } from "@chakra-ui/react";
import { keyframes } from "@emotion/react";
import Head from "next/head";
import { useCallback } from "react";
import { useForm } from "react-hook-form";

export interface CreateGroupFormValues {
  name: string;
  category: string;
  description: string;
  minimum_age: number;
  maximum_age: number;
  capacity: number;
  sex: boolean;
}

export const initialFormValues: CreateGroupFormValues = {
  name: "",
  category: "",
  description: "",
  minimum_age: 0,
  maximum_age: 100,
  capacity: 10,
  sex: false,
};

export const bgColorAnimation = keyframes`
  from {
    width: 0;
    height: 0;
  }
  to {
    width:85%;
    height:100%;
  }
`;

const CreateGroup = () => {
  const { register, handleSubmit, setValue, watch } =
    useForm<CreateGroupFormValues>({
      defaultValues: initialFormValues,
    });

  const { mutate: postClub } = usePost(toUrl(ApiRoutes.Group));

  const onSubmit = useCallback(
    (data: CreateGroupFormValues) => {
      const { category, ...rest } = data;
      const modifiedData = {
        ...rest,
        categories: [Number(category)],
        sex: true,
      };
      postClub(modifiedData);
    },
    [postClub]
  );

  const bgColor = useBgColor();

  return (
    <>
      <Head>
        <title>Join Us - CreateGroup</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DefaultLayout>
        <Flex
          position={"relative"}
          boxShadow={"lg"}
          w={"100%"}
          as={"form"}
          onSubmit={handleSubmit(onSubmit)}
          mb={8}
        >
          <Box
            zIndex={0}
            position={"absolute"}
            w={"85%"}
            h={"100%"}
            bgColor={"primary.500"}
            borderBottomRightRadius={"max(50rem,50rem)"}
            borderTopLeftRadius={"max(0,50rem)"}
            animation={`${bgColorAnimation} 1s ease-in-out`}
          />
          <Flex
            zIndex={1}
            direction={"column"}
            flexGrow={1}
            alignItems={"center"}
            gap={24}
            pt={36}
          >
            <Heading size={"3xl"} color={"white"}>
              <Box>Welcome</Box>
              <Box mt={4} pl={12}>
                Create Group
              </Box>
            </Heading>
            <Flex
              color={"white"}
              fontSize={22}
              fontWeight={"bold"}
              direction={"column"}
              gap={4}
            >
              <Box>환영합니다!</Box>
              <Box>그룹을 만들어 취향과 관심을 공유하고</Box>
              <Box>새로운 경험을 만들어 보세요.</Box>
            </Flex>
            <Flex gap={8}>
              <CustomBtn text="돌아가기" />
              <CustomBtn text="생성하기" type="submit" />
            </Flex>
          </Flex>
          <Container
            boxShadow={"lg"}
            p={8}
            zIndex={1}
            m={12}
            background={bgColor}
            borderRadius={"2xl"}
            flexGrow={1}
          >
            <GroupForm register={register} />
            <GroupOptionForm setValue={setValue} watch={watch} />
          </Container>
        </Flex>
      </DefaultLayout>
    </>
  );
};

export default CreateGroup;
